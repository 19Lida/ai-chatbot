import axios from "axios";

export async function getBotResponse(userText,history=[]) {
  const API_KEY = import.meta.env.VITE_OPENROUTER_API_KEY;
  const endpoint = "https://openrouter.ai/api/v1/chat/completions";

  try {
    const response = await axios.post(
      endpoint,
      {
        model: "z-ai/glm-4.5-air:free", 
        messages: [
          {
            role: "system",
            content:
              "–¢–∏ –¥—Ä—É–∂–Ω—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫, —è–∫–∏–π –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∫–æ—Ä–æ—Ç–∫–æ —ñ –∑—Ä–æ–∑—É–º—ñ–ª–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é.",
          },
          ...history,
          { role: "user", content: userText },
        ],
      },
      {
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${API_KEY}`,
        },
      }
    );

    console.log("‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å OpenRouter:", response.data);

    const reply = response.data?.choices?.[0]?.message?.content?.trim();

    if (!reply || reply === "<s>" || reply === "</s>") {
      return "–ì–æ—Ç–æ–≤–æ ‚úÖ –ê–ª–µ, –∑–¥–∞—î—Ç—å—Å—è, —è –Ω–µ –æ—Ç—Ä–∏–º–∞–≤ –∑–º—ñ—Å—Ç–æ–≤–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ üòÖ";
    }

    return reply;
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ OpenRouter:", error);
    if (error.response) {
      console.log("üì° –ö–æ–¥ –ø–æ–º–∏–ª–∫–∏:", error.response.status);
      console.log("üìÑ –î–µ—Ç–∞–ª—ñ:", error.response.data);
    }
    return "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ üò¢. –ü–µ—Ä–µ–≤—ñ—Ä –∫–ª—é—á –∞–±–æ –º–æ–¥–µ–ª—å.";
  }
}